# Configuration file

general {
    # Enables dev debug features [default: false]
    B:debug_deobf=false

    # Enables debug testing features [default: false]
    B:debug_testing=false
}


##########################################################################################################
# tech-scanning
#--------------------------------------------------------------------------------------------------------#
# contains settings for techdata scanning
##########################################################################################################

tech-scanning {
    # Factor which works in addition to the flat value [range: 0.0 ~ 1000.0, default: 0.8]
    S:dangerous_chunk_factor=0.8

    # Flat value indicating when a chunk techlevel is treated as dangerous [range: 0 ~ 2147483647, default: 1000]
    I:dangerous_chunk_flat=1000

    # Factor which works in addition to the flat value [range: 0.0 ~ 1000.0, default: 0.8]
    S:dangerous_player_factor=0.8

    # Flat value indicating when a player techlevel is treated as dangerous [range: 0 ~ 2147483647, default: 1000]
    I:dangerous_player_flat=1000

    # Inject Scanning AI into vanilla mobs during spawn
    # This is experimental!
    # chance (n out of value) that a zombie or skeleton will spawn with scanning ai [range: 0 ~ 2147483647, default: 1]
    I:inject_scanning_ai=1

    # Value that controls how many chunks can be scanned in one tick (a high value can have high impact on server tickrate) [range: 0 ~ 2147483647, default: 10]
    I:max_scans_per_tick=10

    # This value states how many scans may be scheduled at the same time (technical setting) [range: 0 ~ 2147483647, default: 100]
    I:max_scheduled_scans=100

    # Defines the speed at which mobs can scout a player [range: 0.0 ~ 1.0, default: 0.1]
    S:scouting_step_factor_player=0.1

    # Defines the speed at which mobs can scout an area [range: 0.0 ~ 1.0, default: 0.1]
    S:scouting_step_factor_world=0.1

    # When this is set to true the amount of chunks scanned on tick gets adjusted to the amount of chunks that are queued to be scanned [default: false]
    B:split_scans=false

    # This defines the steps how chunks are scanned
    # (eg. if step one is 0.2 and there are less then 20% of the maximum amount of chunks to be scanned in queue the amount of chunks defined in split_steps_value is scanned)
    D:split_steps_key <
        0.4
        0.8
        1.3
        2.1
        2.7
     >

    # The percentage of chunks that get scanned for each step (in relation to the maximal amount of chunks that would otherwise be scanned)
    D:split_steps_value <
        0.1
        0.2
        0.4
        0.7
        1.0
     >
}


##########################################################################################################
# techdata
#--------------------------------------------------------------------------------------------------------#
# contains settings for techdata
##########################################################################################################

techdata {
    # Here you can define the ItemIds (Names) and set custom techdata-values
    # The format is: modid:item:value or modid:item:meta:value [default: ]
    S:custom_item_values <
     >

    # Here you can define the fully qualified Names of TileEntity Classes and set custom techdata-values
    # The format is: tileentity:value [default: ]
    S:custom_tile_entity_values <
     >

    # Maximum number of effects that can be applied to one mob [range: 0 ~ 2147483647, default: 3]
    I:max_effects_mob=3

    # Maximum number of effects that can be applied to one player [range: 0 ~ 2147483647, default: 3]
    I:max_effects_player=1

    # Maximum number of effects that can be applied to one chunk [range: 0 ~ 2147483647, default: 3]
    I:max_effects_world=3

    # a techvalue below this value is considered safe (releveant is some special cases)
    # Settings this to a high number will not protect the players! [range: -2147483648 ~ 2147483647, default: 20]
    I:safe_tech_value=20

    # chance that an techdata effect gets applied to a mob.
    # techvalue out of n.
    # lower value means higher chance [range: 0 ~ 2147483647, default: 100]
    I:td_effect_chance=100

    # Minimum strength of the effects [range: 0 ~ 2147483647, default: 10]
    I:td_effect_min=10

    # Minimum strength of the effects scaling with techdata [range: 0.0 ~ 3.4028235E38, default: 0.0]
    S:td_effect_min_factor=0.0

    # chance that a techdata effect is applied to a player with high techvalue
    # (1 / n)
    # Setting this to 0 will disable random player effects [range: 0 ~ 2147483647, default: 10]
    I:td_random_player_event_chance=20

    # chance that a random chunk effect gets triggered
    # (1 / n)
    # Setting this to 0 will disable random chunk effects [range: 0 ~ 2147483647, default: 10]
    I:td_random_world_event_chance=10
}


